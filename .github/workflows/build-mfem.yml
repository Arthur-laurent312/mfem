name: build-mfem

on:
  push:

env:
  HYPRE_ARCHIVE: v2.19.0.tar.gz
  HYPRE_URL: https://github.com/hypre-space/hypre/archive
  HYPRE_TOP_DIR: hypre-2.19.0
  METIS_ARCHIVE: metis-4.0.3.tar.gz
  METIS_URL: https://mfem.github.io/tpls
  METIS_TOP_DIR: metis-4.0.3

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        MPI: ["NO", "YES"]
    env:
      MPI: ${{ matrix.MPI }}

    steps:
    - uses: actions/checkout@v2

    - name: Get MPI
      run: |
        if [[ ${MPI} == "YES" ]]; then
          sudo apt-get install mpich libmpich-dev
        fi

    - name: Cache Hypre Install
      uses: actions/cache@v2
      with:
        path: ${{ env.GITHUB_WORKSPACE }}/../${{ env.HYPRE_TOP_DIR }}
        key: ${{ runner.os }}-build-${{ env.HYPRE_TOP_DIR }}

    - name: Install Hypre
      run: |
        if [[ ${MPI} == "YES" ]]; then
           cd ..; # was in ${GITHUB_WORKSPACE}
           if [[ ! -e ${HYPRE_TOP_DIR}/src/hypre/lib/libHYPRE.a ]]; then
              wget --no-verbose ${HYPRE_URL}/${HYPRE_ARCHIVE};
              rm -rf ${HYPRE_TOP_DIR};
              tar -xzf ${HYPRE_ARCHIVE};
              cd ${HYPRE_TOP_DIR}/src;
              ./configure --disable-fortran CC=mpicc CXX=mpic++;
              make -j3;
              cd ../..;
           else
               echo "Reusing cached $HYPRE_TOP_DIR/";
           fi;
           ln -s $HYPRE_TOP_DIR hypre;
           cd ${GITHUB_WORKSPACE}; # back to initial location
        else
           echo "Serial build, not using hypre";
        fi

    - name: Cache Metis Install
      uses: actions/cache@v2
      with:
        path: ${{ env.GITHUB_WORKSPACE }}/../${{ env.METIS_TOP_DIR }}
        key: ${{ runner.os }}-build-${{ env.METIS_TOP_DIR }}

    - name: Install Metis
      run: |
        if [[ ${MPI} == "YES" ]]; then
           cd ..; # was in ${GITHUB_WORKSPACE}
           if [[ ! -e ${METIS_TOP_DIR}/libmetis.a ]]; then
              wget --no-verbose ${METIS_URL}/${METIS_ARCHIVE};
              rm -rf ${METIS_TOP_DIR};
              tar -xzf ${METIS_ARCHIVE};
              make -j3 -C ${METIS_TOP_DIR}/Lib CC=mpicc OPTFLAGS="-O2";
           else
               echo "Reusing cached $METIS_TOP_DIR/";
           fi;
           ln -s $METIS_TOP_DIR metis-4.0;
           cd ${GITHUB_WORKSPACE}; # back to initial location
        else
           echo "Serial build, not using metis";
        fi

    - name: configure
      run: make config MFEM_USE_MPI=$MPI
    - name: make
      run: make -j3
    - name: check
      run: make check
    - name: unit
      run: make unittest
    - name: test
      run: make test
